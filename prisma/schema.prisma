// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native","linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  firstName     String
  lastName      String
  role          UserRole @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  companies     Company[]
  jobApplications JobApplication[]
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  industry    String
  users       User[]
  jobs        Job[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  company     Company   @relation(fields: [companyId], references: [id])
  companyId   Int
  applications JobApplication[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model JobApplication {
  id          Int      @id @default(autoincrement())
  job         Job      @relation(fields: [jobId], references: [id])
  jobId       Int
  applicant   User     @relation(fields: [applicantId], references: [id])
  applicantId Int
  status      ApplicationStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum UserRole {
  USER
  COMPANY_ADMIN
  HR
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
